on:
  - push
  - workflow_dispatch

permissions: write-all

name: Build

jobs:
  build_and_deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: p6m-actions/dotnet-setup@v1

      - name: Login to .NET Repository
        uses: p6m-actions/dotnet-repository-login@v1
        with:
          repository: {{ org-name }}-{{ solution-name }}-nuget
          repository-url: https://${{'{'}}{ vars.ARTIFACTORY_HOSTNAME }}/artifactory/api/nuget/{{ org-name }}-{{ solution-name }}-nuget
          username: ${{'{'}}{ secrets.ARTIFACTORY_USERNAME }}
          password: ${{'{'}}{ secrets.ARTIFACTORY_IDENTITY_TOKEN }}

      - name: Cut Patch Version
        id: cut-patch
        uses: p6m-actions/dotnet-cut-tag@v1
        with:
          version-level: patch

      - name: Build .NET Application
        uses: p6m-actions/dotnet-build@v1
        with:
          run-tests: true
          version: ${{'{'}}{ steps.cut-patch.outputs.version }}

      - name: Login to Docker Repository
        uses: p6m-actions/docker-repository-login@v1
        with:
          registry: ${{'{'}}{ vars.ARTIFACTORY_HOSTNAME }}
          username: ${{'{'}}{ secrets.ARTIFACTORY_USERNAME }}
          password: ${{'{'}}{ secrets.ARTIFACTORY_IDENTITY_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: p6m-actions/docker-buildx-setup@v1

      - name: Build and Publish Docker Image
        id: docker-publish
        uses: p6m-actions/docker-buildx-build-publish@v1
        with:
          image-name: {{ prefix-name }}-{{ suffix-name }}-server
          image-tag: ${{'{'}}{ steps.cut-patch.outputs.version }}
          registry: ${{'{'}}{ vars.ARTIFACTORY_HOSTNAME }}/{{ org-name }}-{{ solution-name }}-docker-local/applications
          push: true
          skip-setup: true
          builder-name: ${{'{'}}{ steps.buildx.outputs.name }}
          secrets: |
            artifactory-token=${{'{'}}{ secrets.ARTIFACTORY_TOKEN }}

      - name: Publish to .NET Repository
        if: github.ref_name == 'main'
        uses: p6m-actions/dotnet-repository-publish@v1
        with:
          repositories: |
            {{ org-name }}-{{ solution-name }}-nuget
        env:
          NUGET_API_KEY: "${{'{'}}{ secrets.ARTIFACTORY_USERNAME }}:${{'{'}}{ secrets.ARTIFACTORY_IDENTITY_TOKEN }}"

      - name: Update Application Manifest
        uses: p6m-actions/platform-application-manifest-dispatch@v1
        with:
          repository: ${{'{'}}{ github.repository }}
          image-name: {{ prefix-name }}-{{ suffix-name }}-server
          environment: "dev"
          digest: ${{'{'}}{ steps.docker-publish.outputs.image-digest }}
          update-manifest-token: ${{'{'}}{ secrets.UPDATE_MANIFEST_TOKEN }}
          platform-dispatch-url: ${{'{'}}{ vars.PLATFORM_DISPATCH_URL }}
          directory-name: {{ prefix-name }}-{{ suffix-name }}
